name: Publish Package to NPM

on:
  push:
    tags:
      - 'v*.*.*' # Запускается по тегам вида v1.0.0, v1.2.3 и т.д.

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read # Необходимо для checkout репозитория
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x' # Используйте актуальную LTS версию Node.js, соответствующую вашему проекту
          registry-url: 'https://registry.npmjs.org/'
          # scope: '@telepilotco' # scope является частью имени пакета, setup-node использует это для .npmrc

      - name: Install dependencies
        run: npm ci
        # env:
          # NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }} # Может понадобиться, если prebuilt-tdlib или другие зависимости требуют аутентификации для скачивания

      # Скрипт 'prepublishOnly' в package.json ('npm run build && npm run lint')
      # будет автоматически выполнен командой 'npm publish'.
      # Если у вас есть отдельный набор тестов, который вы хотите запустить перед публикацией:
      # - name: Run tests
      #   run: npm test # Предполагается, что 'npm test' настроен в вашем package.json

      - name: Align package.json version with Git tag
        id: get_version
        run: echo "TAG_VERSION=$(echo "${GITHUB_REF#refs/tags/v}")" >> $GITHUB_OUTPUT

      - name: Update package.json version
        run: npm version ${{ steps.get_version.outputs.TAG_VERSION }} --no-git-tag-version --allow-same-version
        # --no-git-tag-version: не создавать git-тег, так как workflow уже запущен по тегу
        # --allow-same-version: разрешить, если версия в package.json уже совпадает с тегом

      - name: Publish to npm
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.REGISTRY_TOKEN }} # Убедитесь, что секрет NPM_TOKEN существует в настройках репозитория GitHub
